{"version":3,"sources":["src/index.ts"],"names":[],"mappings":";AAAA,IAAM,EAAa,SAAS,eAAe,UACzC,EAAW,SAAS,eAAe,YACnC,EAAU,SAAS,eAAe,QAClC,EAAY,SAAS,eAAe,aACpC,EAAY,SAAS,eAAe,aACpC,EAAU,SAAS,eAAe,WAClC,EAAU,SAAS,eAAe,WAClC,EAAc,SAAS,eAAe,YAExC,EAAQ,iBAAiB,QAAS,GAElC,IAAM,EAAU,CACd,MAAO,EACP,MAAO,EACP,OAAQ,EACR,OAAQ,GAGV,SAAS,IACH,IAAC,EAAS,UACL,MAAA,GAEP,UAAU,UACP,UAAU,GAAG,EAAS,WACtB,KAAK,WACJ,MAAM,kBAAkB,EAAS,aAElC,MAAM,SAAA,GACL,QAAQ,MAAM,uBAAwB,KAK9C,SAAS,IACA,OAAA,OAAO,aAAa,KAAK,MAAsB,GAAhB,KAAK,UAAiB,IAG9D,SAAS,IACA,OAAA,OAAO,aAAa,KAAK,MAAsB,GAAhB,KAAK,UAAiB,IAG9D,SAAS,IAEA,MADsB,uBACT,KAAK,MAAM,KAAK,SADP,uBAC+B,SAG9D,SAAS,IACA,OAAA,OAAO,aAAa,KAAK,MAAsB,GAAhB,KAAK,UAAiB,IAG9D,SAAS,EACP,EACA,EACA,EACA,EACA,GAEI,IAAA,EAAyB,GAKvB,EAAuB,GAC5B,CAAA,CAAE,MAAK,GAAI,CAAE,MAAK,GAAI,CAAE,OAAM,GAAI,CAAE,OAAM,IAAI,QAAQ,SAAA,GACrD,OAAO,OAAO,GAAM,IAAK,EAAW,KAAK,OAAO,KAAK,GAAM,MAExD,IAAA,IAAI,EAAI,EAAG,EAAI,EAAQ,IAC1B,GAAkB,EAChB,EAAW,KAAK,MAAM,KAAK,SAAW,EAAW,YAG9C,OAAA,EAGT,EAAY,iBAAiB,QAAS,WAC9B,IAAA,GAAqC,EAAY,MACrD,EAA2C,EAAW,QACtD,EAA2C,EAAW,QACtD,EAAyC,EAAS,QAClD,EAAyC,EAAS,QAEpD,EAAS,UAAY,EACnB,EACA,EACA,EACA,EACA","file":"src.d3706a2c.js","sourceRoot":"..","sourcesContent":["const passLength = document.getElementById(\"length\"),\r\n  password = document.getElementById(\"password\"),\r\n  btnCopy = document.getElementById(\"copy\"),\r\n  upperCase = document.getElementById(\"upperCase\"),\r\n  lowerCase = document.getElementById(\"lowerCase\"),\r\n  numbers = document.getElementById(\"numbers\"),\r\n  symbols = document.getElementById(\"symbols\"),\r\n  btnGenerate = document.getElementById(\"generate\");\r\n\r\nbtnCopy.addEventListener(\"click\", copyToClipboard);\r\n\r\nconst objFunc = {\r\n  lower: getRandomLowerCase,\r\n  upper: getRandomUpperCase,\r\n  number: getRandomNumber,\r\n  symbol: getRandomSymbol\r\n};\r\n\r\nfunction copyToClipboard(): string {\r\n  if (!password.innerText) {\r\n    return \"\";\r\n  } else {\r\n    navigator.clipboard\r\n      .writeText(`${password.innerText}`)\r\n      .then(() => {\r\n        alert(`Your password: ${password.innerText}`);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Something went wrong\", err);\r\n      });\r\n  }\r\n}\r\n\r\nfunction getRandomLowerCase(): string {\r\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n}\r\n\r\nfunction getRandomUpperCase(): string {\r\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n}\r\n\r\nfunction getRandomSymbol(): string {\r\n  const SPEC_SYMBOLS: string = \"!@#$%^&*(){}[]=<>/,.\";\r\n  return SPEC_SYMBOLS[Math.floor(Math.random() * SPEC_SYMBOLS.length)];\r\n}\r\n\r\nfunction getRandomNumber(): string {\r\n  return String.fromCharCode(Math.floor(Math.random() * 10) + 48);\r\n}\r\n\r\nfunction passwordGenerate(\r\n  length: number,\r\n  lower: boolean,\r\n  upper: boolean,\r\n  number: boolean,\r\n  symbol: boolean\r\n): string {\r\n  let passwordResult: string = \"\";\r\n  const typesCount: number = +lower + +upper + +number + +symbol;\r\n  // if (typesCount === 0 || length < 4 || length > 20) {\r\n  //   return passwordResult;\r\n  // }\r\n  const arrOfTypes: string[] = [];\r\n  [{ lower }, { upper }, { number }, { symbol }].forEach(item => {\r\n    Object.values(item)[0] ? arrOfTypes.push(Object.keys(item)[0]) : null;\r\n  });\r\n  for (let i = 0; i < length; i++) {\r\n    passwordResult += objFunc[\r\n      arrOfTypes[Math.floor(Math.random() * arrOfTypes.length)]\r\n    ]();\r\n  }\r\n  return passwordResult;\r\n}\r\n\r\nbtnGenerate.addEventListener(\"click\", (): void => {\r\n  const length: number = +(<HTMLInputElement>passLength).value,\r\n    hasLowerCase: boolean = (<HTMLInputElement>lowerCase).checked,\r\n    hasUpperCase: boolean = (<HTMLInputElement>upperCase).checked,\r\n    hasNumbers: boolean = (<HTMLInputElement>numbers).checked,\r\n    hasSymbols: boolean = (<HTMLInputElement>symbols).checked;\r\n\r\n  password.innerText = passwordGenerate(\r\n    length,\r\n    hasLowerCase,\r\n    hasUpperCase,\r\n    hasNumbers,\r\n    hasSymbols\r\n  );\r\n});\r\n"]}